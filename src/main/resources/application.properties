spring.application.name=goottflix


# ?? ?? ??? api ????? ?????? ??
server.port=8080
server.servlet.session.timeout=30m

# MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/goottflix
spring.datasource.username=${DB_USER_NAME}
spring.datasource.password=${DB_SECRET}



## HikariCP ?? (????, ?? ??? ?? ??)
#spring.datasource.hikari.maximum-pool-size=10
#spring.datasource.hikari.minimum-idle=5
#spring.datasource.hikari.idle-timeout=30000
#spring.datasource.hikari.pool-name=SpringBootHikariCP
#spring.datasource.hikari.max-lifetime=2000000
#spring.datasource.hikari.connection-timeout=20000


# MyBatis ??
mybatis.type-aliases-package=com.goottflix
mybatis.mapper-locations=classpath:/mappers/**/*.xml
mybatis.configuration.map-underscore-to-camel-case=true

# SQL ?? ?? ??
logging.level.org.mybatis=INFO
logging.level.jdbc.sqltiming=TRACE
logging.level.jdbc.resultset=TRACE
logging.level.jdbc.audit=TRACE

#Spring security
spring.jwt.secret=${JWT_SECRET}


#naver social login
#registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=http://goottflix.online/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# kakao
# registration
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.redirect-uri=http://goottflix.online/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname

# provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
# ???? ????? 'id'? ??


#google social login
# registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://goottflix.online/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

#iamport ?????
imp.code=${IDEN_CODE}
imp.api.key=${APP_KEY}
imp.api.secretkey=${SECRET_KEY}